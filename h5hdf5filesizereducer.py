# -*- coding: utf-8 -*-
"""H5HDF5FileSizeReducer.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tZ5Ze8M2mNcmwhPJD_JOAYB64O3ri5QT
"""

import h5py
f = h5py.File('mask_rcnn_damage_0019.h5', 'r')

list(f.keys())

list(f.values())

#https://stackoverflow.com/questions/51548551/reading-nested-h5-group-into-numpy-array/51548857

def traverse_datasets(hdf_file):

    def h5py_dataset_iterator(g, prefix=''):
        for key in g.keys():
            item = g[key]
            path = f'{prefix}/{key}'
            if isinstance(item, h5py.Dataset): # test for dataset
                yield (path, item)
            elif isinstance(item, h5py.Group): # test for group (go down)
                yield from h5py_dataset_iterator(item, path)

    for path, _ in h5py_dataset_iterator(hdf_file):
        yield path

        
for dset in traverse_datasets(f):
    print('Path:', dset)
    print('Shape:', f[dset].shape)
    print('Data type:', f[dset].dtype)

f2 = h5py.File('mrcnn_damage_float16.h5',mode='a')
for dset in traverse_datasets(f):
    print('Path:', dset)
    f2[dset]=f[dset][...].astype('float16')
    print('Shape:', f[dset].shape)
    print('Data type:', f[dset].dtype)

for dset in traverse_datasets(f2):
    print('Path:', dset)
    print('Shape:', f2[dset].shape)
    print('Data type:', f2[dset].dtype)

f.close()
f2.close()